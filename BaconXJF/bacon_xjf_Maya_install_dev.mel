/*
The MIT License (MIT)

Copyright (c) 2015 Aaron Bergstrom

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

BaconXJF Development Test Installer
Author: Aaron Bergstrom 
E-mail: flickertail@gmail.com
*/

//Look to see if a previous version of BaconXJF is already installed.
string $bcnVer = `optionVar -q "bxjfVersion"`;

if($bcnVer == "0" || $bcnVer == "development")
{
	//Set version install to development version.
	$bcnVer = "development";
	
	//Value that tells us wether we're using MayaLT or Maya
	//style I/O.
	int $bcnMayaLTioStyle = false;
	//Get the path to the BaconXJF root folder.
	//Because we sourced this MEL script, this
	//path is the same as the current working
	//directory
	string $bxjfFolder = `workspace -q -dir`;
	
	//Set the path to BaconXJF Root directory
	optionVar -sv "pathToBaconXJF" $bxjfFolder;
	
	//Get the path to the user's Maya.env file.
	string $envFile = `about -env`;
	
	//String that will eventually store the
	//path to the user's "userSetup.mel" script.
	string $userSetup = "";
	
	//String array that we will use to Tokenize
	//the path to Maya.env
	string $tknz[];
	
	//Split file path into parts
	tokenize $envFile "/" $tknz;
	
	   int $s = size($tknz)-1;
	   int $i;
	
	//Construct the file path to "userSetup.mel"
	for($i=0; $i<$s; $i++)
	{
		if($i<$s-1) $userSetup += $tknz[$i] + "/";
		else        $userSetup += $tknz[$i] + "/scripts/userSetup.mel";
	}
	
	print ("\n" + $userSetup + "\n");
	
	//Read in all the lines of the "userSetup.mel" file
	string $usLines[];
	if ( catch( $usLines = `freadAllLines $userSetup`  ) )
	{
		//If this is a version of Maya that uses freadAllLines
		//then set the MayaLT IO Style to true.
		$bcnMayaLTioStyle = true;
		
		print "Lines were read\n";
		
	    //Because the catch didn't file, the contents of
	    //the userSetup.mel file are now stored in the
	    //$usLines string array.
	}
	else
	{
		//If this is a version of Maya that does not
		//use freadAllLines then set the MayaLT IO Style
		//to false.
		$bcnMayaLTioStyle = false;
		
		print "Lines were NOT read\n";
	    
	    //Open the userSetup.mel file, read in its
	    //contents line by line and store it in the
	    //$usLines array.
		int $fID = `fopen $userSetup "r"`;
		while( !feof($fID) )
		{
	    	$usLines[size($usLines)] = `fgetline $fID`;
	    }
		fclose $fID;
	}

	//Set the optionVar that reminds all BaconXJF MEL
	//Scripts of the MayaLT IO Style.
    optionVar -iv "isMayaLtBxjf" $bcnMayaLTioStyle;
	
	//Add the BaconXJF MEL scripts to the userSetup.mel file
	$usLines[size($usLines)] = "evalDeferred(\"source" + $bxjfFolder + "/mel/bacon_xjf_json.mel\");\n";
	$usLines[size($usLines)] = "evalDeferred(\"source" + $bxjfFolder + "/mel/bacon_xjf_xml.mel\");\n";
	$usLines[size($usLines)] = "evalDeferred(\"source" + $bxjfFolder + "/mel/bacon_xjf_import.mel\");\n";
	$usLines[size($usLines)] = "evalDeferred(\"source" + $bxjfFolder + "/mel/bacon_xjf.mel\");\n";
	
	//If the IO style is MayaLT, then write all lines 
	//in $usLines array to the userSetup.mel script.
	if($bcnMayaLTioStyle == true)
	{
		fwriteAllLines $userSetup $usLines;
	}
	else
	{
		//If the IO styel is not MayaLT, then open
		//userSetup.mel file in write mode, and write
		//each line one by one to the userSetup.mel 
		//file.
		$s = size($usLines);
		int $fID = `fopen $userSetup "w"`;
		for($i=0; $i<$s; $i++) fprint $fID ($usLines[$i] + "\n");
		fclose $fID;
	}
	
	//Blank this string array.
	$usLines = {};
	
	//Add shelf icons for export and import
	scriptToShelf "exp" "showBaconXJFEx" "1";
	scriptToShelf "imp" "importJsonBxjf" "1";
	
	/************************************************************************
	Add a line here to write the version number when you're ready for a new
	release. */
	
	optionVar -sv "bxjfVersion" "development";
	
	/************************************************************************/
	
	print "BaconXJF MEL Scripts have been added to your 'userSetup.mel' file.\n";
	print ("BaconXJF ver " + $bcnVer + " is installed. Please restart Maya for the changes to take effect.\n");
}
else  print ("BaconXJF version " + $bcnVer + " is already installed. Please uninstall BaconXJF before proceeding.");